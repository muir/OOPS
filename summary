
use strict;
use POSIX qw/strftime/;
use TAP::Parser qw/all/;
use TAP::Parser::Aggregator qw/all/;
use TAP::Parser::Source;
use File::OldSlurp;

my @files = sort(read_dir("results"));

my $aggregate = TAP::Parser::Aggregator->new;
foreach my $file (@files) {
  my $s =  TAP::Parser::Source->new;
  $s->source([ '/bin/cat', "results/$file" ]);
  my $parser = TAP::Parser->new( { source => $s });
  while ( my $result = $parser->next ) {
    # print "$file results: $result->as_string\n";
  }
  $aggregate->add( $file, $parser );
  printf "%-30s ", $file;
  if ($parser->failed) {
    print "Failed\n";
  } elsif ($parser->todo_passed) {
    print "Todo passed\n";
  } elsif ($parser->passed) {
    print "ok\n";
  } elsif ($parser->skipped) {
    print "Skipped\n";
  } else {
    print "????\n";
  }
}

print "\nTOTAL\n";
printf "\n\tPassed: %s\n\tFailed: %s\n", scalar $aggregate->passed, scalar $aggregate->failed;


